// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"anywhere/test/models"
)

// GetV1SupportIPReader is a Reader for the GetV1SupportIP structure.
type GetV1SupportIPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetV1SupportIPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetV1SupportIPOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetV1SupportIPDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetV1SupportIPOK creates a GetV1SupportIPOK with default headers values
func NewGetV1SupportIPOK() *GetV1SupportIPOK {
	return &GetV1SupportIPOK{}
}

/*GetV1SupportIPOK handles this case with default header values.

A JSON array of user names
*/
type GetV1SupportIPOK struct {
	Payload string
}

func (o *GetV1SupportIPOK) Error() string {
	return fmt.Sprintf("[GET /v1/support/ip][%d] getV1SupportIpOK  %+v", 200, o.Payload)
}

func (o *GetV1SupportIPOK) GetPayload() string {
	return o.Payload
}

func (o *GetV1SupportIPOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1SupportIPDefault creates a GetV1SupportIPDefault with default headers values
func NewGetV1SupportIPDefault(code int) *GetV1SupportIPDefault {
	return &GetV1SupportIPDefault{
		_statusCode: code,
	}
}

/*GetV1SupportIPDefault handles this case with default header values.

generic errors
*/
type GetV1SupportIPDefault struct {
	_statusCode int

	Payload models.GenericErrors
}

// Code gets the status code for the get v1 support IP default response
func (o *GetV1SupportIPDefault) Code() int {
	return o._statusCode
}

func (o *GetV1SupportIPDefault) Error() string {
	return fmt.Sprintf("[GET /v1/support/ip][%d] GetV1SupportIP default  %+v", o._statusCode, o.Payload)
}

func (o *GetV1SupportIPDefault) GetPayload() models.GenericErrors {
	return o.Payload
}

func (o *GetV1SupportIPDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
