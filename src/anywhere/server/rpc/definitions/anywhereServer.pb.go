// Code generated by protoc-gen-go. DO NOT EDIT.
// source: anywhere/server/anywhereRpc/definitions/anywhereServer.proto

package anywhereRpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_c258fd090e802fa0, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type AgentInfo struct {
	AgentId              string   `protobuf:"bytes,1,opt,name=agentId,proto3" json:"agentId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AgentInfo) Reset()         { *m = AgentInfo{} }
func (m *AgentInfo) String() string { return proto.CompactTextString(m) }
func (*AgentInfo) ProtoMessage()    {}
func (*AgentInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c258fd090e802fa0, []int{1}
}

func (m *AgentInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AgentInfo.Unmarshal(m, b)
}
func (m *AgentInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AgentInfo.Marshal(b, m, deterministic)
}
func (m *AgentInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AgentInfo.Merge(m, src)
}
func (m *AgentInfo) XXX_Size() int {
	return xxx_messageInfo_AgentInfo.Size(m)
}
func (m *AgentInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AgentInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AgentInfo proto.InternalMessageInfo

func (m *AgentInfo) GetAgentId() string {
	if m != nil {
		return m.AgentId
	}
	return ""
}

func init() {
	proto.RegisterType((*Empty)(nil), "anywhereRpc.Empty")
	proto.RegisterType((*AgentInfo)(nil), "anywhereRpc.AgentInfo")
}

func init() {
	proto.RegisterFile("anywhere/server/anywhereRpc/definitions/anywhereServer.proto", fileDescriptor_c258fd090e802fa0)
}

var fileDescriptor_c258fd090e802fa0 = []byte{
	// 151 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xb2, 0x49, 0xcc, 0xab, 0x2c,
	0xcf, 0x48, 0x2d, 0x4a, 0xd5, 0x2f, 0x4e, 0x2d, 0x2a, 0x4b, 0x2d, 0xd2, 0x87, 0xf1, 0x83, 0x0a,
	0x92, 0xf5, 0x53, 0x52, 0xd3, 0x32, 0xf3, 0x32, 0x4b, 0x32, 0xf3, 0xf3, 0x8a, 0xe1, 0xe2, 0xc1,
	0x60, 0x65, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0xdc, 0x48, 0xaa, 0x95, 0xd8, 0xb9, 0x58,
	0x5d, 0x73, 0x0b, 0x4a, 0x2a, 0x95, 0x54, 0xb9, 0x38, 0x1d, 0xd3, 0x53, 0xf3, 0x4a, 0x3c, 0xf3,
	0xd2, 0xf2, 0x85, 0x24, 0xb8, 0xd8, 0x13, 0xc1, 0x9c, 0x14, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce,
	0x20, 0x18, 0xd7, 0xc8, 0x9b, 0x8b, 0xcf, 0x11, 0xc5, 0x50, 0x21, 0x4b, 0x2e, 0x4e, 0x9f, 0xcc,
	0xe2, 0x12, 0xb0, 0x66, 0x21, 0x21, 0x3d, 0x24, 0xc3, 0xf5, 0xc0, 0x26, 0x4b, 0x89, 0xa1, 0x88,
	0xc1, 0x2d, 0x51, 0x62, 0x48, 0x62, 0x03, 0x3b, 0xc8, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xd0,
	0x54, 0x40, 0x91, 0xd0, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AnywhereServerClient is the client API for AnywhereServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AnywhereServerClient interface {
	ListAgent(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*AgentInfo, error)
}

type anywhereServerClient struct {
	cc *grpc.ClientConn
}

func NewAnywhereServerClient(cc *grpc.ClientConn) AnywhereServerClient {
	return &anywhereServerClient{cc}
}

func (c *anywhereServerClient) ListAgent(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*AgentInfo, error) {
	out := new(AgentInfo)
	err := c.cc.Invoke(ctx, "/anywhereRpc.AnywhereServer/ListAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AnywhereServerServer is the server API for AnywhereServer service.
type AnywhereServerServer interface {
	ListAgent(context.Context, *Empty) (*AgentInfo, error)
}

// UnimplementedAnywhereServerServer can be embedded to have forward compatible implementations.
type UnimplementedAnywhereServerServer struct {
}

func (*UnimplementedAnywhereServerServer) ListAgent(ctx context.Context, req *Empty) (*AgentInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAgent not implemented")
}

func RegisterAnywhereServerServer(s *grpc.Server, srv AnywhereServerServer) {
	s.RegisterService(&_AnywhereServer_serviceDesc, srv)
}

func _AnywhereServer_ListAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnywhereServerServer).ListAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/anywhereRpc.AnywhereServer/ListAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnywhereServerServer).ListAgent(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _AnywhereServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "anywhereRpc.AnywhereServer",
	HandlerType: (*AnywhereServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListAgent",
			Handler:    _AnywhereServer_ListAgent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "anywhere/server/anywhereRpc/definitions/anywhereServer.proto",
}
