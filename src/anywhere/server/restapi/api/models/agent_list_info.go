// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AgentListInfo Journal information
// swagger:model AgentListInfo
type AgentListInfo struct {

	// agent admin addr
	// Required: true
	AgentAdminAddr *string `json:"agentAdminAddr"`

	// agent Id
	// Required: true
	AgentID *int64 `json:"agentId"`

	// last ack
	// Required: true
	LastAck *string `json:"lastAck"`

	// status
	// Required: true
	Status *string `json:"status"`
}

// Validate validates this agent list info
func (m *AgentListInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAgentAdminAddr(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAgentID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastAck(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AgentListInfo) validateAgentAdminAddr(formats strfmt.Registry) error {

	if err := validate.Required("agentAdminAddr", "body", m.AgentAdminAddr); err != nil {
		return err
	}

	return nil
}

func (m *AgentListInfo) validateAgentID(formats strfmt.Registry) error {

	if err := validate.Required("agentId", "body", m.AgentID); err != nil {
		return err
	}

	return nil
}

func (m *AgentListInfo) validateLastAck(formats strfmt.Registry) error {

	if err := validate.Required("lastAck", "body", m.LastAck); err != nil {
		return err
	}

	return nil
}

func (m *AgentListInfo) validateStatus(formats strfmt.Registry) error {

	if err := validate.Required("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AgentListInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AgentListInfo) UnmarshalBinary(b []byte) error {
	var res AgentListInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
