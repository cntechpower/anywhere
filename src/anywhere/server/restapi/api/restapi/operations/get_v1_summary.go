// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetV1SummaryHandlerFunc turns a function with the right signature into a get v1 summary handler
type GetV1SummaryHandlerFunc func(GetV1SummaryParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetV1SummaryHandlerFunc) Handle(params GetV1SummaryParams) middleware.Responder {
	return fn(params)
}

// GetV1SummaryHandler interface for that can handle valid get v1 summary params
type GetV1SummaryHandler interface {
	Handle(GetV1SummaryParams) middleware.Responder
}

// NewGetV1Summary creates a new http.Handler for the get v1 summary operation
func NewGetV1Summary(ctx *middleware.Context, handler GetV1SummaryHandler) *GetV1Summary {
	return &GetV1Summary{Context: ctx, Handler: handler}
}

/*GetV1Summary swagger:route GET /v1/summary getV1Summary

GetV1Summary get v1 summary API

*/
type GetV1Summary struct {
	Context *middleware.Context
	Handler GetV1SummaryHandler
}

func (o *GetV1Summary) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetV1SummaryParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
