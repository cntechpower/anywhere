// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetV1AgentListHandlerFunc turns a function with the right signature into a get v1 agent list handler
type GetV1AgentListHandlerFunc func(GetV1AgentListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetV1AgentListHandlerFunc) Handle(params GetV1AgentListParams) middleware.Responder {
	return fn(params)
}

// GetV1AgentListHandler interface for that can handle valid get v1 agent list params
type GetV1AgentListHandler interface {
	Handle(GetV1AgentListParams) middleware.Responder
}

// NewGetV1AgentList creates a new http.Handler for the get v1 agent list operation
func NewGetV1AgentList(ctx *middleware.Context, handler GetV1AgentListHandler) *GetV1AgentList {
	return &GetV1AgentList{Context: ctx, Handler: handler}
}

/*GetV1AgentList swagger:route GET /v1/agent/list getV1AgentList

Returns a list of all agent.

*/
type GetV1AgentList struct {
	Context *middleware.Context
	Handler GetV1AgentListHandler
}

func (o *GetV1AgentList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetV1AgentListParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
