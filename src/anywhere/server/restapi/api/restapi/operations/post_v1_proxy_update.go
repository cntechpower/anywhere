// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// PostV1ProxyUpdateHandlerFunc turns a function with the right signature into a post v1 proxy update handler
type PostV1ProxyUpdateHandlerFunc func(PostV1ProxyUpdateParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostV1ProxyUpdateHandlerFunc) Handle(params PostV1ProxyUpdateParams) middleware.Responder {
	return fn(params)
}

// PostV1ProxyUpdateHandler interface for that can handle valid post v1 proxy update params
type PostV1ProxyUpdateHandler interface {
	Handle(PostV1ProxyUpdateParams) middleware.Responder
}

// NewPostV1ProxyUpdate creates a new http.Handler for the post v1 proxy update operation
func NewPostV1ProxyUpdate(ctx *middleware.Context, handler PostV1ProxyUpdateHandler) *PostV1ProxyUpdate {
	return &PostV1ProxyUpdate{Context: ctx, Handler: handler}
}

/*PostV1ProxyUpdate swagger:route POST /v1/proxy/update postV1ProxyUpdate

PostV1ProxyUpdate post v1 proxy update API

*/
type PostV1ProxyUpdate struct {
	Context *middleware.Context
	Handler PostV1ProxyUpdateHandler
}

func (o *PostV1ProxyUpdate) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPostV1ProxyUpdateParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
