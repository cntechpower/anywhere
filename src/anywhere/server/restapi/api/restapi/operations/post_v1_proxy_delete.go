// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// PostV1ProxyDeleteHandlerFunc turns a function with the right signature into a post v1 proxy delete handler
type PostV1ProxyDeleteHandlerFunc func(PostV1ProxyDeleteParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostV1ProxyDeleteHandlerFunc) Handle(params PostV1ProxyDeleteParams) middleware.Responder {
	return fn(params)
}

// PostV1ProxyDeleteHandler interface for that can handle valid post v1 proxy delete params
type PostV1ProxyDeleteHandler interface {
	Handle(PostV1ProxyDeleteParams) middleware.Responder
}

// NewPostV1ProxyDelete creates a new http.Handler for the post v1 proxy delete operation
func NewPostV1ProxyDelete(ctx *middleware.Context, handler PostV1ProxyDeleteHandler) *PostV1ProxyDelete {
	return &PostV1ProxyDelete{Context: ctx, Handler: handler}
}

/*PostV1ProxyDelete swagger:route POST /v1/proxy/delete postV1ProxyDelete

PostV1ProxyDelete post v1 proxy delete API

*/
type PostV1ProxyDelete struct {
	Context *middleware.Context
	Handler PostV1ProxyDeleteHandler
}

func (o *PostV1ProxyDelete) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPostV1ProxyDeleteParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
