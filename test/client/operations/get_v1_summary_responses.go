// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cntechpower/anywhere/test/models"
)

// GetV1SummaryReader is a Reader for the GetV1Summary structure.
type GetV1SummaryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetV1SummaryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetV1SummaryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetV1SummaryDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetV1SummaryOK creates a GetV1SummaryOK with default headers values
func NewGetV1SummaryOK() *GetV1SummaryOK {
	return &GetV1SummaryOK{}
}

/*GetV1SummaryOK handles this case with default header values.

get anywhere statistic summary
*/
type GetV1SummaryOK struct {
	Payload *models.SummaryStatistic
}

func (o *GetV1SummaryOK) Error() string {
	return fmt.Sprintf("[GET /v1/summary][%d] getV1SummaryOK  %+v", 200, o.Payload)
}

func (o *GetV1SummaryOK) GetPayload() *models.SummaryStatistic {
	return o.Payload
}

func (o *GetV1SummaryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SummaryStatistic)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1SummaryDefault creates a GetV1SummaryDefault with default headers values
func NewGetV1SummaryDefault(code int) *GetV1SummaryDefault {
	return &GetV1SummaryDefault{
		_statusCode: code,
	}
}

/*GetV1SummaryDefault handles this case with default header values.

generic errors
*/
type GetV1SummaryDefault struct {
	_statusCode int

	Payload models.GenericErrors
}

// Code gets the status code for the get v1 summary default response
func (o *GetV1SummaryDefault) Code() int {
	return o._statusCode
}

func (o *GetV1SummaryDefault) Error() string {
	return fmt.Sprintf("[GET /v1/summary][%d] GetV1Summary default  %+v", o._statusCode, o.Payload)
}

func (o *GetV1SummaryDefault) GetPayload() models.GenericErrors {
	return o.Payload
}

func (o *GetV1SummaryDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
