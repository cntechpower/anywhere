// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPostV1ProxyDeleteParams creates a new PostV1ProxyDeleteParams object
// with the default values initialized.
func NewPostV1ProxyDeleteParams() *PostV1ProxyDeleteParams {
	var ()
	return &PostV1ProxyDeleteParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostV1ProxyDeleteParamsWithTimeout creates a new PostV1ProxyDeleteParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostV1ProxyDeleteParamsWithTimeout(timeout time.Duration) *PostV1ProxyDeleteParams {
	var ()
	return &PostV1ProxyDeleteParams{

		timeout: timeout,
	}
}

// NewPostV1ProxyDeleteParamsWithContext creates a new PostV1ProxyDeleteParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostV1ProxyDeleteParamsWithContext(ctx context.Context) *PostV1ProxyDeleteParams {
	var ()
	return &PostV1ProxyDeleteParams{

		Context: ctx,
	}
}

// NewPostV1ProxyDeleteParamsWithHTTPClient creates a new PostV1ProxyDeleteParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostV1ProxyDeleteParamsWithHTTPClient(client *http.Client) *PostV1ProxyDeleteParams {
	var ()
	return &PostV1ProxyDeleteParams{
		HTTPClient: client,
	}
}

/*PostV1ProxyDeleteParams contains all the parameters to send to the API endpoint
for the post v1 proxy delete operation typically these are written to a http.Request
*/
type PostV1ProxyDeleteParams struct {

	/*GroupName
	  group name

	*/
	GroupName string
	/*LocalAddr
	  localAddress

	*/
	LocalAddr string
	/*RemotePort
	  localAddress

	*/
	RemotePort string
	/*UserName
	  user name

	*/
	UserName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post v1 proxy delete params
func (o *PostV1ProxyDeleteParams) WithTimeout(timeout time.Duration) *PostV1ProxyDeleteParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post v1 proxy delete params
func (o *PostV1ProxyDeleteParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post v1 proxy delete params
func (o *PostV1ProxyDeleteParams) WithContext(ctx context.Context) *PostV1ProxyDeleteParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post v1 proxy delete params
func (o *PostV1ProxyDeleteParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post v1 proxy delete params
func (o *PostV1ProxyDeleteParams) WithHTTPClient(client *http.Client) *PostV1ProxyDeleteParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post v1 proxy delete params
func (o *PostV1ProxyDeleteParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithGroupName adds the groupName to the post v1 proxy delete params
func (o *PostV1ProxyDeleteParams) WithGroupName(groupName string) *PostV1ProxyDeleteParams {
	o.SetGroupName(groupName)
	return o
}

// SetGroupName adds the groupName to the post v1 proxy delete params
func (o *PostV1ProxyDeleteParams) SetGroupName(groupName string) {
	o.GroupName = groupName
}

// WithLocalAddr adds the localAddr to the post v1 proxy delete params
func (o *PostV1ProxyDeleteParams) WithLocalAddr(localAddr string) *PostV1ProxyDeleteParams {
	o.SetLocalAddr(localAddr)
	return o
}

// SetLocalAddr adds the localAddr to the post v1 proxy delete params
func (o *PostV1ProxyDeleteParams) SetLocalAddr(localAddr string) {
	o.LocalAddr = localAddr
}

// WithRemotePort adds the remotePort to the post v1 proxy delete params
func (o *PostV1ProxyDeleteParams) WithRemotePort(remotePort string) *PostV1ProxyDeleteParams {
	o.SetRemotePort(remotePort)
	return o
}

// SetRemotePort adds the remotePort to the post v1 proxy delete params
func (o *PostV1ProxyDeleteParams) SetRemotePort(remotePort string) {
	o.RemotePort = remotePort
}

// WithUserName adds the userName to the post v1 proxy delete params
func (o *PostV1ProxyDeleteParams) WithUserName(userName string) *PostV1ProxyDeleteParams {
	o.SetUserName(userName)
	return o
}

// SetUserName adds the userName to the post v1 proxy delete params
func (o *PostV1ProxyDeleteParams) SetUserName(userName string) {
	o.UserName = userName
}

// WriteToRequest writes these params to a swagger request
func (o *PostV1ProxyDeleteParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// form param group_name
	frGroupName := o.GroupName
	fGroupName := frGroupName
	if fGroupName != "" {
		if err := r.SetFormParam("group_name", fGroupName); err != nil {
			return err
		}
	}

	// form param local_addr
	frLocalAddr := o.LocalAddr
	fLocalAddr := frLocalAddr
	if fLocalAddr != "" {
		if err := r.SetFormParam("local_addr", fLocalAddr); err != nil {
			return err
		}
	}

	// form param remote_port
	frRemotePort := o.RemotePort
	fRemotePort := frRemotePort
	if fRemotePort != "" {
		if err := r.SetFormParam("remote_port", fRemotePort); err != nil {
			return err
		}
	}

	// form param user_name
	frUserName := o.UserName
	fUserName := frUserName
	if fUserName != "" {
		if err := r.SetFormParam("user_name", fUserName); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
