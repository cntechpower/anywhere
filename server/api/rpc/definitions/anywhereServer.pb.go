// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server/api/rpc/definitions/anywhereServer.proto

package anywhereRpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_anywhereServer_b035c31038679af0, []int{0}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Agent struct {
	UserName             string   `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
	ZoneName             string   `protobuf:"bytes,2,opt,name=zoneName,proto3" json:"zoneName,omitempty"`
	Id                   string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	RemoteAddr           string   `protobuf:"bytes,4,opt,name=remoteAddr,proto3" json:"remoteAddr,omitempty"`
	LastAckRcv           string   `protobuf:"bytes,5,opt,name=lastAckRcv,proto3" json:"lastAckRcv,omitempty"`
	LastAckSend          string   `protobuf:"bytes,6,opt,name=lastAckSend,proto3" json:"lastAckSend,omitempty"`
	ProxyConfigCount     int64    `protobuf:"varint,7,opt,name=proxyConfigCount,proto3" json:"proxyConfigCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Agent) Reset()         { *m = Agent{} }
func (m *Agent) String() string { return proto.CompactTextString(m) }
func (*Agent) ProtoMessage()    {}
func (*Agent) Descriptor() ([]byte, []int) {
	return fileDescriptor_anywhereServer_b035c31038679af0, []int{1}
}
func (m *Agent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Agent.Unmarshal(m, b)
}
func (m *Agent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Agent.Marshal(b, m, deterministic)
}
func (dst *Agent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Agent.Merge(dst, src)
}
func (m *Agent) XXX_Size() int {
	return xxx_messageInfo_Agent.Size(m)
}
func (m *Agent) XXX_DiscardUnknown() {
	xxx_messageInfo_Agent.DiscardUnknown(m)
}

var xxx_messageInfo_Agent proto.InternalMessageInfo

func (m *Agent) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *Agent) GetZoneName() string {
	if m != nil {
		return m.ZoneName
	}
	return ""
}

func (m *Agent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Agent) GetRemoteAddr() string {
	if m != nil {
		return m.RemoteAddr
	}
	return ""
}

func (m *Agent) GetLastAckRcv() string {
	if m != nil {
		return m.LastAckRcv
	}
	return ""
}

func (m *Agent) GetLastAckSend() string {
	if m != nil {
		return m.LastAckSend
	}
	return ""
}

func (m *Agent) GetProxyConfigCount() int64 {
	if m != nil {
		return m.ProxyConfigCount
	}
	return 0
}

type Agents struct {
	Agent                []*Agent `protobuf:"bytes,1,rep,name=agent,proto3" json:"agent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Agents) Reset()         { *m = Agents{} }
func (m *Agents) String() string { return proto.CompactTextString(m) }
func (*Agents) ProtoMessage()    {}
func (*Agents) Descriptor() ([]byte, []int) {
	return fileDescriptor_anywhereServer_b035c31038679af0, []int{2}
}
func (m *Agents) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Agents.Unmarshal(m, b)
}
func (m *Agents) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Agents.Marshal(b, m, deterministic)
}
func (dst *Agents) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Agents.Merge(dst, src)
}
func (m *Agents) XXX_Size() int {
	return xxx_messageInfo_Agents.Size(m)
}
func (m *Agents) XXX_DiscardUnknown() {
	xxx_messageInfo_Agents.DiscardUnknown(m)
}

var xxx_messageInfo_Agents proto.InternalMessageInfo

func (m *Agents) GetAgent() []*Agent {
	if m != nil {
		return m.Agent
	}
	return nil
}

type ProxyConfig struct {
	Username                        string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	ZoneName                        string   `protobuf:"bytes,2,opt,name=zoneName,proto3" json:"zoneName,omitempty"`
	RemotePort                      int64    `protobuf:"varint,3,opt,name=remotePort,proto3" json:"remotePort,omitempty"`
	LocalAddr                       string   `protobuf:"bytes,4,opt,name=localAddr,proto3" json:"localAddr,omitempty"`
	IsWhiteListOn                   bool     `protobuf:"varint,5,opt,name=isWhiteListOn,proto3" json:"isWhiteListOn,omitempty"`
	WhiteCidrList                   string   `protobuf:"bytes,6,opt,name=WhiteCidrList,proto3" json:"WhiteCidrList,omitempty"`
	NetworkFlowRemoteToLocalInBytes int64    `protobuf:"varint,7,opt,name=NetworkFlowRemoteToLocalInBytes,proto3" json:"NetworkFlowRemoteToLocalInBytes,omitempty"`
	NetworkFlowLocalToRemoteInBytes int64    `protobuf:"varint,8,opt,name=NetworkFlowLocalToRemoteInBytes,proto3" json:"NetworkFlowLocalToRemoteInBytes,omitempty"`
	ProxyConnectCount               int64    `protobuf:"varint,9,opt,name=ProxyConnectCount,proto3" json:"ProxyConnectCount,omitempty"`
	ProxyConnectRejectCount         int64    `protobuf:"varint,10,opt,name=ProxyConnectRejectCount,proto3" json:"ProxyConnectRejectCount,omitempty"`
	XXX_NoUnkeyedLiteral            struct{} `json:"-"`
	XXX_unrecognized                []byte   `json:"-"`
	XXX_sizecache                   int32    `json:"-"`
}

func (m *ProxyConfig) Reset()         { *m = ProxyConfig{} }
func (m *ProxyConfig) String() string { return proto.CompactTextString(m) }
func (*ProxyConfig) ProtoMessage()    {}
func (*ProxyConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_anywhereServer_b035c31038679af0, []int{3}
}
func (m *ProxyConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProxyConfig.Unmarshal(m, b)
}
func (m *ProxyConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProxyConfig.Marshal(b, m, deterministic)
}
func (dst *ProxyConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxyConfig.Merge(dst, src)
}
func (m *ProxyConfig) XXX_Size() int {
	return xxx_messageInfo_ProxyConfig.Size(m)
}
func (m *ProxyConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxyConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ProxyConfig proto.InternalMessageInfo

func (m *ProxyConfig) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ProxyConfig) GetZoneName() string {
	if m != nil {
		return m.ZoneName
	}
	return ""
}

func (m *ProxyConfig) GetRemotePort() int64 {
	if m != nil {
		return m.RemotePort
	}
	return 0
}

func (m *ProxyConfig) GetLocalAddr() string {
	if m != nil {
		return m.LocalAddr
	}
	return ""
}

func (m *ProxyConfig) GetIsWhiteListOn() bool {
	if m != nil {
		return m.IsWhiteListOn
	}
	return false
}

func (m *ProxyConfig) GetWhiteCidrList() string {
	if m != nil {
		return m.WhiteCidrList
	}
	return ""
}

func (m *ProxyConfig) GetNetworkFlowRemoteToLocalInBytes() int64 {
	if m != nil {
		return m.NetworkFlowRemoteToLocalInBytes
	}
	return 0
}

func (m *ProxyConfig) GetNetworkFlowLocalToRemoteInBytes() int64 {
	if m != nil {
		return m.NetworkFlowLocalToRemoteInBytes
	}
	return 0
}

func (m *ProxyConfig) GetProxyConnectCount() int64 {
	if m != nil {
		return m.ProxyConnectCount
	}
	return 0
}

func (m *ProxyConfig) GetProxyConnectRejectCount() int64 {
	if m != nil {
		return m.ProxyConnectRejectCount
	}
	return 0
}

type AddProxyConfigInput struct {
	Config               *ProxyConfig `protobuf:"bytes,1,opt,name=Config,proto3" json:"Config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *AddProxyConfigInput) Reset()         { *m = AddProxyConfigInput{} }
func (m *AddProxyConfigInput) String() string { return proto.CompactTextString(m) }
func (*AddProxyConfigInput) ProtoMessage()    {}
func (*AddProxyConfigInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_anywhereServer_b035c31038679af0, []int{4}
}
func (m *AddProxyConfigInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddProxyConfigInput.Unmarshal(m, b)
}
func (m *AddProxyConfigInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddProxyConfigInput.Marshal(b, m, deterministic)
}
func (dst *AddProxyConfigInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddProxyConfigInput.Merge(dst, src)
}
func (m *AddProxyConfigInput) XXX_Size() int {
	return xxx_messageInfo_AddProxyConfigInput.Size(m)
}
func (m *AddProxyConfigInput) XXX_DiscardUnknown() {
	xxx_messageInfo_AddProxyConfigInput.DiscardUnknown(m)
}

var xxx_messageInfo_AddProxyConfigInput proto.InternalMessageInfo

func (m *AddProxyConfigInput) GetConfig() *ProxyConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type ListProxyConfigsOutput struct {
	Config               []*ProxyConfig `protobuf:"bytes,1,rep,name=Config,proto3" json:"Config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ListProxyConfigsOutput) Reset()         { *m = ListProxyConfigsOutput{} }
func (m *ListProxyConfigsOutput) String() string { return proto.CompactTextString(m) }
func (*ListProxyConfigsOutput) ProtoMessage()    {}
func (*ListProxyConfigsOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_anywhereServer_b035c31038679af0, []int{5}
}
func (m *ListProxyConfigsOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProxyConfigsOutput.Unmarshal(m, b)
}
func (m *ListProxyConfigsOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProxyConfigsOutput.Marshal(b, m, deterministic)
}
func (dst *ListProxyConfigsOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProxyConfigsOutput.Merge(dst, src)
}
func (m *ListProxyConfigsOutput) XXX_Size() int {
	return xxx_messageInfo_ListProxyConfigsOutput.Size(m)
}
func (m *ListProxyConfigsOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProxyConfigsOutput.DiscardUnknown(m)
}

var xxx_messageInfo_ListProxyConfigsOutput proto.InternalMessageInfo

func (m *ListProxyConfigsOutput) GetConfig() []*ProxyConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type RemoveProxyConfigInput struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveProxyConfigInput) Reset()         { *m = RemoveProxyConfigInput{} }
func (m *RemoveProxyConfigInput) String() string { return proto.CompactTextString(m) }
func (*RemoveProxyConfigInput) ProtoMessage()    {}
func (*RemoveProxyConfigInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_anywhereServer_b035c31038679af0, []int{6}
}
func (m *RemoveProxyConfigInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveProxyConfigInput.Unmarshal(m, b)
}
func (m *RemoveProxyConfigInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveProxyConfigInput.Marshal(b, m, deterministic)
}
func (dst *RemoveProxyConfigInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveProxyConfigInput.Merge(dst, src)
}
func (m *RemoveProxyConfigInput) XXX_Size() int {
	return xxx_messageInfo_RemoveProxyConfigInput.Size(m)
}
func (m *RemoveProxyConfigInput) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveProxyConfigInput.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveProxyConfigInput proto.InternalMessageInfo

func (m *RemoveProxyConfigInput) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ListConnsInput struct {
	UserName             string   `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
	ZoneName             string   `protobuf:"bytes,2,opt,name=zoneName,proto3" json:"zoneName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListConnsInput) Reset()         { *m = ListConnsInput{} }
func (m *ListConnsInput) String() string { return proto.CompactTextString(m) }
func (*ListConnsInput) ProtoMessage()    {}
func (*ListConnsInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_anywhereServer_b035c31038679af0, []int{7}
}
func (m *ListConnsInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListConnsInput.Unmarshal(m, b)
}
func (m *ListConnsInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListConnsInput.Marshal(b, m, deterministic)
}
func (dst *ListConnsInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListConnsInput.Merge(dst, src)
}
func (m *ListConnsInput) XXX_Size() int {
	return xxx_messageInfo_ListConnsInput.Size(m)
}
func (m *ListConnsInput) XXX_DiscardUnknown() {
	xxx_messageInfo_ListConnsInput.DiscardUnknown(m)
}

var xxx_messageInfo_ListConnsInput proto.InternalMessageInfo

func (m *ListConnsInput) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *ListConnsInput) GetZoneName() string {
	if m != nil {
		return m.ZoneName
	}
	return ""
}

type Conn struct {
	UserName             string   `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
	ZoneName             string   `protobuf:"bytes,2,opt,name=zoneName,proto3" json:"zoneName,omitempty"`
	AgentId              string   `protobuf:"bytes,3,opt,name=agentId,proto3" json:"agentId,omitempty"`
	ConnId               int64    `protobuf:"varint,4,opt,name=connId,proto3" json:"connId,omitempty"`
	SrcRemoteAddr        string   `protobuf:"bytes,5,opt,name=srcRemoteAddr,proto3" json:"srcRemoteAddr,omitempty"`
	SrcLocalAddr         string   `protobuf:"bytes,6,opt,name=srcLocalAddr,proto3" json:"srcLocalAddr,omitempty"`
	DstRemoteAddr        string   `protobuf:"bytes,7,opt,name=dstRemoteAddr,proto3" json:"dstRemoteAddr,omitempty"`
	DstLocalAddr         string   `protobuf:"bytes,8,opt,name=dstLocalAddr,proto3" json:"dstLocalAddr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Conn) Reset()         { *m = Conn{} }
func (m *Conn) String() string { return proto.CompactTextString(m) }
func (*Conn) ProtoMessage()    {}
func (*Conn) Descriptor() ([]byte, []int) {
	return fileDescriptor_anywhereServer_b035c31038679af0, []int{8}
}
func (m *Conn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Conn.Unmarshal(m, b)
}
func (m *Conn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Conn.Marshal(b, m, deterministic)
}
func (dst *Conn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Conn.Merge(dst, src)
}
func (m *Conn) XXX_Size() int {
	return xxx_messageInfo_Conn.Size(m)
}
func (m *Conn) XXX_DiscardUnknown() {
	xxx_messageInfo_Conn.DiscardUnknown(m)
}

var xxx_messageInfo_Conn proto.InternalMessageInfo

func (m *Conn) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *Conn) GetZoneName() string {
	if m != nil {
		return m.ZoneName
	}
	return ""
}

func (m *Conn) GetAgentId() string {
	if m != nil {
		return m.AgentId
	}
	return ""
}

func (m *Conn) GetConnId() int64 {
	if m != nil {
		return m.ConnId
	}
	return 0
}

func (m *Conn) GetSrcRemoteAddr() string {
	if m != nil {
		return m.SrcRemoteAddr
	}
	return ""
}

func (m *Conn) GetSrcLocalAddr() string {
	if m != nil {
		return m.SrcLocalAddr
	}
	return ""
}

func (m *Conn) GetDstRemoteAddr() string {
	if m != nil {
		return m.DstRemoteAddr
	}
	return ""
}

func (m *Conn) GetDstLocalAddr() string {
	if m != nil {
		return m.DstLocalAddr
	}
	return ""
}

type Conns struct {
	Conn                 []*Conn  `protobuf:"bytes,1,rep,name=conn,proto3" json:"conn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Conns) Reset()         { *m = Conns{} }
func (m *Conns) String() string { return proto.CompactTextString(m) }
func (*Conns) ProtoMessage()    {}
func (*Conns) Descriptor() ([]byte, []int) {
	return fileDescriptor_anywhereServer_b035c31038679af0, []int{9}
}
func (m *Conns) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Conns.Unmarshal(m, b)
}
func (m *Conns) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Conns.Marshal(b, m, deterministic)
}
func (dst *Conns) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Conns.Merge(dst, src)
}
func (m *Conns) XXX_Size() int {
	return xxx_messageInfo_Conns.Size(m)
}
func (m *Conns) XXX_DiscardUnknown() {
	xxx_messageInfo_Conns.DiscardUnknown(m)
}

var xxx_messageInfo_Conns proto.InternalMessageInfo

func (m *Conns) GetConn() []*Conn {
	if m != nil {
		return m.Conn
	}
	return nil
}

type KillConnByIdInput struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KillConnByIdInput) Reset()         { *m = KillConnByIdInput{} }
func (m *KillConnByIdInput) String() string { return proto.CompactTextString(m) }
func (*KillConnByIdInput) ProtoMessage()    {}
func (*KillConnByIdInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_anywhereServer_b035c31038679af0, []int{10}
}
func (m *KillConnByIdInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KillConnByIdInput.Unmarshal(m, b)
}
func (m *KillConnByIdInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KillConnByIdInput.Marshal(b, m, deterministic)
}
func (dst *KillConnByIdInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KillConnByIdInput.Merge(dst, src)
}
func (m *KillConnByIdInput) XXX_Size() int {
	return xxx_messageInfo_KillConnByIdInput.Size(m)
}
func (m *KillConnByIdInput) XXX_DiscardUnknown() {
	xxx_messageInfo_KillConnByIdInput.DiscardUnknown(m)
}

var xxx_messageInfo_KillConnByIdInput proto.InternalMessageInfo

func (m *KillConnByIdInput) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type UpdateProxyConfigWhiteListInput struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserName             string   `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	ZoneName             string   `protobuf:"bytes,3,opt,name=zoneName,proto3" json:"zoneName,omitempty"`
	LocalAddr            string   `protobuf:"bytes,4,opt,name=localAddr,proto3" json:"localAddr,omitempty"`
	WhiteCidrs           string   `protobuf:"bytes,5,opt,name=whiteCidrs,proto3" json:"whiteCidrs,omitempty"`
	WhiteListEnable      bool     `protobuf:"varint,6,opt,name=whiteListEnable,proto3" json:"whiteListEnable,omitempty"`
	RemotePort           int64    `protobuf:"varint,7,opt,name=remotePort,proto3" json:"remotePort,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateProxyConfigWhiteListInput) Reset()         { *m = UpdateProxyConfigWhiteListInput{} }
func (m *UpdateProxyConfigWhiteListInput) String() string { return proto.CompactTextString(m) }
func (*UpdateProxyConfigWhiteListInput) ProtoMessage()    {}
func (*UpdateProxyConfigWhiteListInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_anywhereServer_b035c31038679af0, []int{11}
}
func (m *UpdateProxyConfigWhiteListInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateProxyConfigWhiteListInput.Unmarshal(m, b)
}
func (m *UpdateProxyConfigWhiteListInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateProxyConfigWhiteListInput.Marshal(b, m, deterministic)
}
func (dst *UpdateProxyConfigWhiteListInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateProxyConfigWhiteListInput.Merge(dst, src)
}
func (m *UpdateProxyConfigWhiteListInput) XXX_Size() int {
	return xxx_messageInfo_UpdateProxyConfigWhiteListInput.Size(m)
}
func (m *UpdateProxyConfigWhiteListInput) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateProxyConfigWhiteListInput.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateProxyConfigWhiteListInput proto.InternalMessageInfo

func (m *UpdateProxyConfigWhiteListInput) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateProxyConfigWhiteListInput) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *UpdateProxyConfigWhiteListInput) GetZoneName() string {
	if m != nil {
		return m.ZoneName
	}
	return ""
}

func (m *UpdateProxyConfigWhiteListInput) GetLocalAddr() string {
	if m != nil {
		return m.LocalAddr
	}
	return ""
}

func (m *UpdateProxyConfigWhiteListInput) GetWhiteCidrs() string {
	if m != nil {
		return m.WhiteCidrs
	}
	return ""
}

func (m *UpdateProxyConfigWhiteListInput) GetWhiteListEnable() bool {
	if m != nil {
		return m.WhiteListEnable
	}
	return false
}

func (m *UpdateProxyConfigWhiteListInput) GetRemotePort() int64 {
	if m != nil {
		return m.RemotePort
	}
	return 0
}

type GetSummaryOutput struct {
	AgentCount                  int64          `protobuf:"varint,1,opt,name=agentCount,proto3" json:"agentCount,omitempty"`
	ProxyCount                  int64          `protobuf:"varint,2,opt,name=proxyCount,proto3" json:"proxyCount,omitempty"`
	CurrentProxyConnectionCount int64          `protobuf:"varint,3,opt,name=currentProxyConnectionCount,proto3" json:"currentProxyConnectionCount,omitempty"`
	ProxyConnectCount           int64          `protobuf:"varint,4,opt,name=proxyConnectCount,proto3" json:"proxyConnectCount,omitempty"`
	ProxyNetFlowInBytes         int64          `protobuf:"varint,5,opt,name=proxyNetFlowInBytes,proto3" json:"proxyNetFlowInBytes,omitempty"`
	ConfigNetFlowTop10          []*ProxyConfig `protobuf:"bytes,6,rep,name=configNetFlowTop10,proto3" json:"configNetFlowTop10,omitempty"`
	ConfigConnectFailTop10      []*ProxyConfig `protobuf:"bytes,7,rep,name=configConnectFailTop10,proto3" json:"configConnectFailTop10,omitempty"`
	AdminWebUiAuthFailCount     int64          `protobuf:"varint,8,opt,name=adminWebUiAuthFailCount,proto3" json:"adminWebUiAuthFailCount,omitempty"`
	GroupCount                  int64          `protobuf:"varint,9,opt,name=groupCount,proto3" json:"groupCount,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}       `json:"-"`
	XXX_unrecognized            []byte         `json:"-"`
	XXX_sizecache               int32          `json:"-"`
}

func (m *GetSummaryOutput) Reset()         { *m = GetSummaryOutput{} }
func (m *GetSummaryOutput) String() string { return proto.CompactTextString(m) }
func (*GetSummaryOutput) ProtoMessage()    {}
func (*GetSummaryOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_anywhereServer_b035c31038679af0, []int{12}
}
func (m *GetSummaryOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSummaryOutput.Unmarshal(m, b)
}
func (m *GetSummaryOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSummaryOutput.Marshal(b, m, deterministic)
}
func (dst *GetSummaryOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSummaryOutput.Merge(dst, src)
}
func (m *GetSummaryOutput) XXX_Size() int {
	return xxx_messageInfo_GetSummaryOutput.Size(m)
}
func (m *GetSummaryOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSummaryOutput.DiscardUnknown(m)
}

var xxx_messageInfo_GetSummaryOutput proto.InternalMessageInfo

func (m *GetSummaryOutput) GetAgentCount() int64 {
	if m != nil {
		return m.AgentCount
	}
	return 0
}

func (m *GetSummaryOutput) GetProxyCount() int64 {
	if m != nil {
		return m.ProxyCount
	}
	return 0
}

func (m *GetSummaryOutput) GetCurrentProxyConnectionCount() int64 {
	if m != nil {
		return m.CurrentProxyConnectionCount
	}
	return 0
}

func (m *GetSummaryOutput) GetProxyConnectCount() int64 {
	if m != nil {
		return m.ProxyConnectCount
	}
	return 0
}

func (m *GetSummaryOutput) GetProxyNetFlowInBytes() int64 {
	if m != nil {
		return m.ProxyNetFlowInBytes
	}
	return 0
}

func (m *GetSummaryOutput) GetConfigNetFlowTop10() []*ProxyConfig {
	if m != nil {
		return m.ConfigNetFlowTop10
	}
	return nil
}

func (m *GetSummaryOutput) GetConfigConnectFailTop10() []*ProxyConfig {
	if m != nil {
		return m.ConfigConnectFailTop10
	}
	return nil
}

func (m *GetSummaryOutput) GetAdminWebUiAuthFailCount() int64 {
	if m != nil {
		return m.AdminWebUiAuthFailCount
	}
	return 0
}

func (m *GetSummaryOutput) GetGroupCount() int64 {
	if m != nil {
		return m.GroupCount
	}
	return 0
}

func init() {
	proto.RegisterType((*Empty)(nil), "anywhereRpc.Empty")
	proto.RegisterType((*Agent)(nil), "anywhereRpc.Agent")
	proto.RegisterType((*Agents)(nil), "anywhereRpc.Agents")
	proto.RegisterType((*ProxyConfig)(nil), "anywhereRpc.ProxyConfig")
	proto.RegisterType((*AddProxyConfigInput)(nil), "anywhereRpc.AddProxyConfigInput")
	proto.RegisterType((*ListProxyConfigsOutput)(nil), "anywhereRpc.ListProxyConfigsOutput")
	proto.RegisterType((*RemoveProxyConfigInput)(nil), "anywhereRpc.RemoveProxyConfigInput")
	proto.RegisterType((*ListConnsInput)(nil), "anywhereRpc.ListConnsInput")
	proto.RegisterType((*Conn)(nil), "anywhereRpc.Conn")
	proto.RegisterType((*Conns)(nil), "anywhereRpc.Conns")
	proto.RegisterType((*KillConnByIdInput)(nil), "anywhereRpc.KillConnByIdInput")
	proto.RegisterType((*UpdateProxyConfigWhiteListInput)(nil), "anywhereRpc.UpdateProxyConfigWhiteListInput")
	proto.RegisterType((*GetSummaryOutput)(nil), "anywhereRpc.GetSummaryOutput")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AnywhereServerClient is the client API for AnywhereServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AnywhereServerClient interface {
	ListAgent(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Agents, error)
	AddProxyConfig(ctx context.Context, in *AddProxyConfigInput, opts ...grpc.CallOption) (*Empty, error)
	ListProxyConfigs(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ListProxyConfigsOutput, error)
	RemoveProxyConfig(ctx context.Context, in *RemoveProxyConfigInput, opts ...grpc.CallOption) (*Empty, error)
	LoadProxyConfigFile(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	SaveProxyConfigToFile(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	ListConns(ctx context.Context, in *ListConnsInput, opts ...grpc.CallOption) (*Conns, error)
	KillConnById(ctx context.Context, in *KillConnByIdInput, opts ...grpc.CallOption) (*Empty, error)
	KillAllConns(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	UpdateProxyConfigWhiteList(ctx context.Context, in *UpdateProxyConfigWhiteListInput, opts ...grpc.CallOption) (*Empty, error)
	GetSummary(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetSummaryOutput, error)
	SendReport(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
}

type anywhereServerClient struct {
	cc *grpc.ClientConn
}

func NewAnywhereServerClient(cc *grpc.ClientConn) AnywhereServerClient {
	return &anywhereServerClient{cc}
}

func (c *anywhereServerClient) ListAgent(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Agents, error) {
	out := new(Agents)
	err := c.cc.Invoke(ctx, "/anywhereRpc.AnywhereServer/ListAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anywhereServerClient) AddProxyConfig(ctx context.Context, in *AddProxyConfigInput, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/anywhereRpc.AnywhereServer/AddProxyConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anywhereServerClient) ListProxyConfigs(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ListProxyConfigsOutput, error) {
	out := new(ListProxyConfigsOutput)
	err := c.cc.Invoke(ctx, "/anywhereRpc.AnywhereServer/ListProxyConfigs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anywhereServerClient) RemoveProxyConfig(ctx context.Context, in *RemoveProxyConfigInput, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/anywhereRpc.AnywhereServer/RemoveProxyConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anywhereServerClient) LoadProxyConfigFile(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/anywhereRpc.AnywhereServer/LoadProxyConfigFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anywhereServerClient) SaveProxyConfigToFile(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/anywhereRpc.AnywhereServer/SaveProxyConfigToFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anywhereServerClient) ListConns(ctx context.Context, in *ListConnsInput, opts ...grpc.CallOption) (*Conns, error) {
	out := new(Conns)
	err := c.cc.Invoke(ctx, "/anywhereRpc.AnywhereServer/ListConns", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anywhereServerClient) KillConnById(ctx context.Context, in *KillConnByIdInput, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/anywhereRpc.AnywhereServer/KillConnById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anywhereServerClient) KillAllConns(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/anywhereRpc.AnywhereServer/KillAllConns", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anywhereServerClient) UpdateProxyConfigWhiteList(ctx context.Context, in *UpdateProxyConfigWhiteListInput, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/anywhereRpc.AnywhereServer/UpdateProxyConfigWhiteList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anywhereServerClient) GetSummary(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetSummaryOutput, error) {
	out := new(GetSummaryOutput)
	err := c.cc.Invoke(ctx, "/anywhereRpc.AnywhereServer/GetSummary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anywhereServerClient) SendReport(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/anywhereRpc.AnywhereServer/SendReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AnywhereServerServer is the server API for AnywhereServer service.
type AnywhereServerServer interface {
	ListAgent(context.Context, *Empty) (*Agents, error)
	AddProxyConfig(context.Context, *AddProxyConfigInput) (*Empty, error)
	ListProxyConfigs(context.Context, *Empty) (*ListProxyConfigsOutput, error)
	RemoveProxyConfig(context.Context, *RemoveProxyConfigInput) (*Empty, error)
	LoadProxyConfigFile(context.Context, *Empty) (*Empty, error)
	SaveProxyConfigToFile(context.Context, *Empty) (*Empty, error)
	ListConns(context.Context, *ListConnsInput) (*Conns, error)
	KillConnById(context.Context, *KillConnByIdInput) (*Empty, error)
	KillAllConns(context.Context, *Empty) (*Empty, error)
	UpdateProxyConfigWhiteList(context.Context, *UpdateProxyConfigWhiteListInput) (*Empty, error)
	GetSummary(context.Context, *Empty) (*GetSummaryOutput, error)
	SendReport(context.Context, *Empty) (*Empty, error)
}

func RegisterAnywhereServerServer(s *grpc.Server, srv AnywhereServerServer) {
	s.RegisterService(&_AnywhereServer_serviceDesc, srv)
}

func _AnywhereServer_ListAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnywhereServerServer).ListAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/anywhereRpc.AnywhereServer/ListAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnywhereServerServer).ListAgent(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnywhereServer_AddProxyConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddProxyConfigInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnywhereServerServer).AddProxyConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/anywhereRpc.AnywhereServer/AddProxyConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnywhereServerServer).AddProxyConfig(ctx, req.(*AddProxyConfigInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnywhereServer_ListProxyConfigs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnywhereServerServer).ListProxyConfigs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/anywhereRpc.AnywhereServer/ListProxyConfigs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnywhereServerServer).ListProxyConfigs(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnywhereServer_RemoveProxyConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveProxyConfigInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnywhereServerServer).RemoveProxyConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/anywhereRpc.AnywhereServer/RemoveProxyConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnywhereServerServer).RemoveProxyConfig(ctx, req.(*RemoveProxyConfigInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnywhereServer_LoadProxyConfigFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnywhereServerServer).LoadProxyConfigFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/anywhereRpc.AnywhereServer/LoadProxyConfigFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnywhereServerServer).LoadProxyConfigFile(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnywhereServer_SaveProxyConfigToFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnywhereServerServer).SaveProxyConfigToFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/anywhereRpc.AnywhereServer/SaveProxyConfigToFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnywhereServerServer).SaveProxyConfigToFile(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnywhereServer_ListConns_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListConnsInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnywhereServerServer).ListConns(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/anywhereRpc.AnywhereServer/ListConns",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnywhereServerServer).ListConns(ctx, req.(*ListConnsInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnywhereServer_KillConnById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KillConnByIdInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnywhereServerServer).KillConnById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/anywhereRpc.AnywhereServer/KillConnById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnywhereServerServer).KillConnById(ctx, req.(*KillConnByIdInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnywhereServer_KillAllConns_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnywhereServerServer).KillAllConns(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/anywhereRpc.AnywhereServer/KillAllConns",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnywhereServerServer).KillAllConns(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnywhereServer_UpdateProxyConfigWhiteList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProxyConfigWhiteListInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnywhereServerServer).UpdateProxyConfigWhiteList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/anywhereRpc.AnywhereServer/UpdateProxyConfigWhiteList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnywhereServerServer).UpdateProxyConfigWhiteList(ctx, req.(*UpdateProxyConfigWhiteListInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnywhereServer_GetSummary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnywhereServerServer).GetSummary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/anywhereRpc.AnywhereServer/GetSummary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnywhereServerServer).GetSummary(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnywhereServer_SendReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnywhereServerServer).SendReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/anywhereRpc.AnywhereServer/SendReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnywhereServerServer).SendReport(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _AnywhereServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "anywhereRpc.AnywhereServer",
	HandlerType: (*AnywhereServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListAgent",
			Handler:    _AnywhereServer_ListAgent_Handler,
		},
		{
			MethodName: "AddProxyConfig",
			Handler:    _AnywhereServer_AddProxyConfig_Handler,
		},
		{
			MethodName: "ListProxyConfigs",
			Handler:    _AnywhereServer_ListProxyConfigs_Handler,
		},
		{
			MethodName: "RemoveProxyConfig",
			Handler:    _AnywhereServer_RemoveProxyConfig_Handler,
		},
		{
			MethodName: "LoadProxyConfigFile",
			Handler:    _AnywhereServer_LoadProxyConfigFile_Handler,
		},
		{
			MethodName: "SaveProxyConfigToFile",
			Handler:    _AnywhereServer_SaveProxyConfigToFile_Handler,
		},
		{
			MethodName: "ListConns",
			Handler:    _AnywhereServer_ListConns_Handler,
		},
		{
			MethodName: "KillConnById",
			Handler:    _AnywhereServer_KillConnById_Handler,
		},
		{
			MethodName: "KillAllConns",
			Handler:    _AnywhereServer_KillAllConns_Handler,
		},
		{
			MethodName: "UpdateProxyConfigWhiteList",
			Handler:    _AnywhereServer_UpdateProxyConfigWhiteList_Handler,
		},
		{
			MethodName: "GetSummary",
			Handler:    _AnywhereServer_GetSummary_Handler,
		},
		{
			MethodName: "SendReport",
			Handler:    _AnywhereServer_SendReport_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server/api/rpc/definitions/anywhereServer.proto",
}

func init() {
	proto.RegisterFile("server/api/rpc/definitions/anywhereServer.proto", fileDescriptor_anywhereServer_b035c31038679af0)
}

var fileDescriptor_anywhereServer_b035c31038679af0 = []byte{
	// 978 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0x5d, 0x6f, 0xdb, 0x36,
	0x14, 0xf5, 0x47, 0xfc, 0x91, 0xeb, 0x2e, 0x4b, 0x18, 0x2c, 0x13, 0xd2, 0x2d, 0x35, 0xd4, 0x0d,
	0x30, 0x86, 0x22, 0xce, 0x32, 0xa0, 0xe8, 0xd3, 0x36, 0x37, 0x6b, 0x1a, 0x6f, 0x59, 0x1a, 0x28,
	0x29, 0xfa, 0x3a, 0x45, 0x62, 0x13, 0xae, 0x32, 0x29, 0x50, 0x74, 0x3c, 0xef, 0x79, 0xff, 0x6e,
	0x6f, 0x7b, 0xdf, 0x1f, 0xd8, 0xdb, 0xfe, 0x41, 0x41, 0x52, 0xb2, 0x48, 0x49, 0x8e, 0xdb, 0xbc,
	0x99, 0xe7, 0x5e, 0x1e, 0x5f, 0x9e, 0xcb, 0x7b, 0x44, 0x18, 0x26, 0x98, 0xdf, 0x62, 0x3e, 0xf4,
	0x63, 0x32, 0xe4, 0x71, 0x30, 0x0c, 0xf1, 0x5b, 0x42, 0x89, 0x20, 0x8c, 0x26, 0x43, 0x9f, 0xce,
	0x67, 0x37, 0x98, 0xe3, 0x0b, 0x95, 0xb2, 0x1f, 0x73, 0x26, 0x18, 0xea, 0x65, 0xa8, 0x17, 0x07,
	0x6e, 0x07, 0x5a, 0x2f, 0x26, 0xb1, 0x98, 0xbb, 0xff, 0xd6, 0xa1, 0x35, 0xba, 0xc6, 0x54, 0xa0,
	0x5d, 0xe8, 0x4e, 0x13, 0xcc, 0xcf, 0xfc, 0x09, 0x76, 0xea, 0xfd, 0xfa, 0x60, 0xdd, 0x5b, 0xac,
	0x65, 0xec, 0x4f, 0x46, 0xb1, 0x8a, 0x35, 0x74, 0x2c, 0x5b, 0xa3, 0x0d, 0x68, 0x90, 0xd0, 0x69,
	0x2a, 0xb4, 0x41, 0x42, 0xb4, 0x07, 0xc0, 0xf1, 0x84, 0x09, 0x3c, 0x0a, 0x43, 0xee, 0xac, 0x29,
	0xdc, 0x40, 0x64, 0x3c, 0xf2, 0x13, 0x31, 0x0a, 0xde, 0x79, 0xc1, 0xad, 0xd3, 0xd2, 0xf1, 0x1c,
	0x41, 0x7d, 0xe8, 0xa5, 0xab, 0x0b, 0x4c, 0x43, 0xa7, 0xad, 0x12, 0x4c, 0x08, 0x7d, 0x03, 0x9b,
	0x31, 0x67, 0x7f, 0xcc, 0x8f, 0x18, 0x7d, 0x4b, 0xae, 0x8f, 0xd8, 0x94, 0x0a, 0xa7, 0xd3, 0xaf,
	0x0f, 0x9a, 0x5e, 0x09, 0x77, 0x0f, 0xa1, 0xad, 0x8e, 0x97, 0xa0, 0x01, 0xb4, 0x7c, 0xf9, 0xcb,
	0xa9, 0xf7, 0x9b, 0x83, 0xde, 0x21, 0xda, 0x37, 0xf4, 0xd8, 0x57, 0x39, 0x9e, 0x4e, 0x70, 0xff,
	0x6e, 0x42, 0xef, 0x3c, 0x27, 0xca, 0x94, 0xa1, 0x05, 0x65, 0xe8, 0x2a, 0x65, 0x16, 0x4a, 0x9c,
	0x33, 0x2e, 0x94, 0x42, 0x4d, 0xcf, 0x40, 0xd0, 0x17, 0xb0, 0x1e, 0xb1, 0xc0, 0x8f, 0x0c, 0xa1,
	0x72, 0x00, 0x7d, 0x05, 0x9f, 0x90, 0xe4, 0xcd, 0x0d, 0x11, 0xf8, 0x94, 0x24, 0xe2, 0x15, 0x55,
	0x52, 0x75, 0x3d, 0x1b, 0x94, 0x59, 0x6a, 0x79, 0x44, 0x42, 0x2e, 0xa1, 0x54, 0x2f, 0x1b, 0x44,
	0x27, 0xf0, 0xe8, 0x0c, 0x8b, 0x19, 0xe3, 0xef, 0x8e, 0x23, 0x36, 0xf3, 0x54, 0x09, 0x97, 0xec,
	0x54, 0xfe, 0xd7, 0x98, 0x3e, 0x9f, 0x0b, 0x9c, 0xa4, 0x02, 0xae, 0x4a, 0x2b, 0x30, 0xa9, 0xd0,
	0x25, 0xd3, 0x99, 0x19, 0x53, 0xb7, 0xc4, 0x54, 0x95, 0x86, 0x9e, 0xc0, 0x56, 0x26, 0x32, 0xc5,
	0x81, 0xd0, 0x6d, 0x5c, 0x57, 0x7b, 0xcb, 0x01, 0xf4, 0x0c, 0x3e, 0x37, 0x41, 0x0f, 0xff, 0xbe,
	0xd8, 0x03, 0x6a, 0xcf, 0xb2, 0xb0, 0xfb, 0x12, 0xb6, 0x47, 0x61, 0x68, 0xf4, 0x73, 0x4c, 0xe3,
	0xa9, 0x40, 0x07, 0xd0, 0xd6, 0x4b, 0xd5, 0xd2, 0xde, 0xa1, 0x63, 0xdd, 0x07, 0x23, 0xdd, 0x4b,
	0xf3, 0xdc, 0x9f, 0x61, 0x47, 0x8a, 0x69, 0x84, 0x92, 0x57, 0x53, 0x51, 0xe4, 0x6a, 0x7e, 0x10,
	0xd7, 0x00, 0x76, 0xa4, 0x1a, 0xb7, 0xb8, 0x54, 0x97, 0x1e, 0xa7, 0xba, 0x3a, 0x53, 0x83, 0x84,
	0xee, 0x09, 0x6c, 0xc8, 0x7f, 0x95, 0x07, 0x4b, 0x74, 0xc6, 0x3d, 0x07, 0xd5, 0xfd, 0xab, 0x01,
	0x6b, 0x92, 0xe6, 0xde, 0x93, 0xee, 0x40, 0x47, 0x0d, 0xc8, 0x38, 0x1b, 0xf7, 0x6c, 0x89, 0x76,
	0xa0, 0x1d, 0x30, 0x4a, 0xc7, 0xa1, 0xba, 0xc6, 0x4d, 0x2f, 0x5d, 0xc9, 0xdb, 0x99, 0xf0, 0xc0,
	0xcb, 0xed, 0x40, 0x8f, 0xbb, 0x0d, 0x22, 0x17, 0x1e, 0x24, 0x3c, 0x38, 0x5d, 0x8c, 0x82, 0xbe,
	0xc2, 0x16, 0x26, 0x99, 0xc2, 0x44, 0x18, 0x4c, 0x1d, 0xcd, 0x64, 0x81, 0x92, 0x29, 0x4c, 0x44,
	0xce, 0xd4, 0xd5, 0x4c, 0x26, 0xe6, 0xee, 0x43, 0x4b, 0x89, 0x89, 0xbe, 0x86, 0x35, 0x59, 0x66,
	0xda, 0xb3, 0x2d, 0xab, 0x67, 0x32, 0xc3, 0x53, 0x61, 0xf7, 0x31, 0x6c, 0xfd, 0x42, 0xa2, 0x48,
	0x22, 0xcf, 0xe7, 0xe3, 0xb0, 0xba, 0x4b, 0xff, 0xd7, 0xe1, 0xd1, 0xeb, 0x38, 0xf4, 0x85, 0xd9,
	0xd0, 0xc5, 0x9c, 0x56, 0xee, 0xb1, 0xda, 0xd0, 0xb8, 0xa3, 0x0d, 0xcd, 0x42, 0x1b, 0xee, 0xb6,
	0x8d, 0x3d, 0x80, 0x59, 0x36, 0xfb, 0x49, 0x66, 0xaf, 0x39, 0x82, 0x06, 0xf0, 0xe9, 0x2c, 0xab,
	0xeb, 0x05, 0xf5, 0xaf, 0x22, 0xac, 0xf4, 0xee, 0x7a, 0x45, 0xb8, 0x60, 0x5f, 0x9d, 0xa2, 0x7d,
	0xb9, 0xff, 0x35, 0x61, 0xf3, 0x25, 0x16, 0x17, 0xd3, 0xc9, 0xc4, 0xe7, 0xf3, 0x74, 0x14, 0xf6,
	0x00, 0xd4, 0xa5, 0xd0, 0xa3, 0xa9, 0x0f, 0x6b, 0x20, 0x32, 0x9e, 0x7a, 0xb4, 0x8c, 0x37, 0x74,
	0x3c, 0x47, 0xd0, 0x8f, 0xf0, 0x30, 0x98, 0x72, 0x8e, 0xa9, 0x30, 0xe7, 0x99, 0x30, 0xaa, 0x37,
	0x68, 0x13, 0xbd, 0x2b, 0x45, 0xfa, 0x4a, 0x5c, 0xf2, 0x15, 0x7d, 0x2d, 0xcb, 0x01, 0x74, 0x00,
	0xdb, 0x0a, 0x3c, 0xc3, 0x42, 0x3a, 0x55, 0xe6, 0x61, 0x2d, 0x95, 0x5f, 0x15, 0x42, 0x27, 0x80,
	0x02, 0xd5, 0xde, 0x14, 0xbf, 0x64, 0xf1, 0xb7, 0x07, 0x4e, 0x7b, 0xc5, 0xe0, 0x57, 0xec, 0x41,
	0xe7, 0xb0, 0x13, 0xa4, 0x9f, 0x2a, 0x55, 0xd1, 0xb1, 0x4f, 0x22, 0xcd, 0xd6, 0x59, 0xc1, 0xb6,
	0x64, 0x9f, 0x74, 0x49, 0x3f, 0x9c, 0x10, 0xfa, 0x06, 0x5f, 0xbd, 0x26, 0xa3, 0xa9, 0xb8, 0x91,
	0x21, 0xad, 0x80, 0x76, 0xe5, 0x65, 0x61, 0xd9, 0x97, 0x6b, 0xce, 0xa6, 0xb1, 0x69, 0xc3, 0x06,
	0x72, 0xf8, 0x4f, 0x1b, 0x36, 0x46, 0xd6, 0xb3, 0x02, 0x3d, 0x85, 0x75, 0x79, 0x5b, 0xf4, 0xeb,
	0xc1, 0xfe, 0x9c, 0xaa, 0xb7, 0xc5, 0xee, 0x76, 0xf9, 0x13, 0x9b, 0xb8, 0x35, 0x74, 0x02, 0x1b,
	0xb6, 0x21, 0xa3, 0xbe, 0x9d, 0x58, 0x76, 0xeb, 0xdd, 0x0a, 0x7a, 0xb7, 0x86, 0x7e, 0x85, 0xcd,
	0xa2, 0x23, 0x57, 0x16, 0xf2, 0xd8, 0xc2, 0xaa, 0x4d, 0xdc, 0xad, 0xa1, 0x33, 0xd8, 0x2a, 0x99,
	0x32, 0xb2, 0xf7, 0x56, 0x9b, 0xf6, 0x92, 0xf2, 0x7e, 0x80, 0xed, 0x53, 0xe6, 0x9b, 0x87, 0x39,
	0x26, 0x11, 0xae, 0xac, 0xb0, 0x9a, 0x60, 0x04, 0x9f, 0x5d, 0xf8, 0xd6, 0xdf, 0x5d, 0xb2, 0x8f,
	0xa4, 0xf8, 0x5e, 0x37, 0x49, 0x3b, 0xde, 0xc3, 0x92, 0x0e, 0xf9, 0x67, 0xa5, 0xb0, 0x5f, 0x05,
	0xdc, 0x1a, 0xfa, 0x09, 0x1e, 0x98, 0xee, 0x87, 0xf6, 0xac, 0xac, 0x92, 0x31, 0x2e, 0xa9, 0xe2,
	0x99, 0x66, 0x19, 0xe9, 0xec, 0xe4, 0x23, 0xea, 0xff, 0x0d, 0x76, 0x97, 0xfb, 0x2a, 0x7a, 0x62,
	0xed, 0x59, 0x61, 0xc0, 0x4b, 0x45, 0x86, 0xdc, 0xc5, 0x2a, 0x2b, 0xfb, 0xd2, 0xc2, 0x8a, 0x96,
	0xe7, 0xd6, 0xd0, 0x53, 0x00, 0xf9, 0x30, 0xf5, 0x70, 0x2c, 0x9f, 0x75, 0x1f, 0x7c, 0xb8, 0xab,
	0xb6, 0x7a, 0x99, 0x7f, 0xf7, 0x3e, 0x00, 0x00, 0xff, 0xff, 0x8b, 0xc6, 0xa3, 0xc2, 0xcc, 0x0b,
	0x00, 0x00,
}
