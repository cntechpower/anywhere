// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetV1ConnectionListHandlerFunc turns a function with the right signature into a get v1 connection list handler
type GetV1ConnectionListHandlerFunc func(GetV1ConnectionListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetV1ConnectionListHandlerFunc) Handle(params GetV1ConnectionListParams) middleware.Responder {
	return fn(params)
}

// GetV1ConnectionListHandler interface for that can handle valid get v1 connection list params
type GetV1ConnectionListHandler interface {
	Handle(GetV1ConnectionListParams) middleware.Responder
}

// NewGetV1ConnectionList creates a new http.Handler for the get v1 connection list operation
func NewGetV1ConnectionList(ctx *middleware.Context, handler GetV1ConnectionListHandler) *GetV1ConnectionList {
	return &GetV1ConnectionList{Context: ctx, Handler: handler}
}

/*GetV1ConnectionList swagger:route GET /v1/connection/list getV1ConnectionList

Returns a list of all conection.

*/
type GetV1ConnectionList struct {
	Context *middleware.Context
	Handler GetV1ConnectionListHandler
}

func (o *GetV1ConnectionList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetV1ConnectionListParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
