// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: proto/server/anywhere_server.proto

// 包名建议小写下划线风格

package server_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 空消息
type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_server_anywhere_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_server_anywhere_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_server_anywhere_server_proto_rawDescGZIP(), []int{0}
}

// Agent 信息
type Agent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName         string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`                            // 用户名
	ZoneName         string `protobuf:"bytes,2,opt,name=zone_name,json=zoneName,proto3" json:"zone_name,omitempty"`                            // 区域名
	Id               string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`                                                        // agent ID
	RemoteAddr       string `protobuf:"bytes,4,opt,name=remote_addr,json=remoteAddr,proto3" json:"remote_addr,omitempty"`                      // 远程地址
	LastAckRcv       string `protobuf:"bytes,5,opt,name=last_ack_rcv,json=lastAckRcv,proto3" json:"last_ack_rcv,omitempty"`                    // 最后接收时间
	LastAckSend      string `protobuf:"bytes,6,opt,name=last_ack_send,json=lastAckSend,proto3" json:"last_ack_send,omitempty"`                 // 最后发送时间
	ProxyConfigCount int64  `protobuf:"varint,7,opt,name=proxy_config_count,json=proxyConfigCount,proto3" json:"proxy_config_count,omitempty"` // 代理配置数量
}

func (x *Agent) Reset() {
	*x = Agent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_server_anywhere_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Agent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agent) ProtoMessage() {}

func (x *Agent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_server_anywhere_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agent.ProtoReflect.Descriptor instead.
func (*Agent) Descriptor() ([]byte, []int) {
	return file_proto_server_anywhere_server_proto_rawDescGZIP(), []int{1}
}

func (x *Agent) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Agent) GetZoneName() string {
	if x != nil {
		return x.ZoneName
	}
	return ""
}

func (x *Agent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Agent) GetRemoteAddr() string {
	if x != nil {
		return x.RemoteAddr
	}
	return ""
}

func (x *Agent) GetLastAckRcv() string {
	if x != nil {
		return x.LastAckRcv
	}
	return ""
}

func (x *Agent) GetLastAckSend() string {
	if x != nil {
		return x.LastAckSend
	}
	return ""
}

func (x *Agent) GetProxyConfigCount() int64 {
	if x != nil {
		return x.ProxyConfigCount
	}
	return 0
}

// Agent 列表
type Agents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agents []*Agent `protobuf:"bytes,1,rep,name=agents,proto3" json:"agents,omitempty"`
}

func (x *Agents) Reset() {
	*x = Agents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_server_anywhere_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Agents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agents) ProtoMessage() {}

func (x *Agents) ProtoReflect() protoreflect.Message {
	mi := &file_proto_server_anywhere_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agents.ProtoReflect.Descriptor instead.
func (*Agents) Descriptor() ([]byte, []int) {
	return file_proto_server_anywhere_server_proto_rawDescGZIP(), []int{2}
}

func (x *Agents) GetAgents() []*Agent {
	if x != nil {
		return x.Agents
	}
	return nil
}

// 代理配置
type ProxyConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName                        string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`                                                                                 // 用户名
	ZoneName                        string `protobuf:"bytes,2,opt,name=zone_name,json=zoneName,proto3" json:"zone_name,omitempty"`                                                                                 // 区域名
	RemotePort                      int64  `protobuf:"varint,3,opt,name=remote_port,json=remotePort,proto3" json:"remote_port,omitempty"`                                                                          // 远程端口
	LocalAddr                       string `protobuf:"bytes,4,opt,name=local_addr,json=localAddr,proto3" json:"local_addr,omitempty"`                                                                              // 本地地址
	IsWhiteListOn                   bool   `protobuf:"varint,5,opt,name=is_white_list_on,json=isWhiteListOn,proto3" json:"is_white_list_on,omitempty"`                                                             // 是否启用白名单
	WhiteCidrList                   string `protobuf:"bytes,6,opt,name=white_cidr_list,json=whiteCidrList,proto3" json:"white_cidr_list,omitempty"`                                                                // 白名单 CIDR 列表
	NetworkFlowRemoteToLocalInBytes int64  `protobuf:"varint,7,opt,name=network_flow_remote_to_local_in_bytes,json=networkFlowRemoteToLocalInBytes,proto3" json:"network_flow_remote_to_local_in_bytes,omitempty"` // 入流量
	NetworkFlowLocalToRemoteInBytes int64  `protobuf:"varint,8,opt,name=network_flow_local_to_remote_in_bytes,json=networkFlowLocalToRemoteInBytes,proto3" json:"network_flow_local_to_remote_in_bytes,omitempty"` // 出流量
	ProxyConnectCount               int64  `protobuf:"varint,9,opt,name=proxy_connect_count,json=proxyConnectCount,proto3" json:"proxy_connect_count,omitempty"`                                                   // 连接次数
	ProxyConnectRejectCount         int64  `protobuf:"varint,10,opt,name=proxy_connect_reject_count,json=proxyConnectRejectCount,proto3" json:"proxy_connect_reject_count,omitempty"`                              // 拒绝连接次数
}

func (x *ProxyConfig) Reset() {
	*x = ProxyConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_server_anywhere_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyConfig) ProtoMessage() {}

func (x *ProxyConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_server_anywhere_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyConfig.ProtoReflect.Descriptor instead.
func (*ProxyConfig) Descriptor() ([]byte, []int) {
	return file_proto_server_anywhere_server_proto_rawDescGZIP(), []int{3}
}

func (x *ProxyConfig) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ProxyConfig) GetZoneName() string {
	if x != nil {
		return x.ZoneName
	}
	return ""
}

func (x *ProxyConfig) GetRemotePort() int64 {
	if x != nil {
		return x.RemotePort
	}
	return 0
}

func (x *ProxyConfig) GetLocalAddr() string {
	if x != nil {
		return x.LocalAddr
	}
	return ""
}

func (x *ProxyConfig) GetIsWhiteListOn() bool {
	if x != nil {
		return x.IsWhiteListOn
	}
	return false
}

func (x *ProxyConfig) GetWhiteCidrList() string {
	if x != nil {
		return x.WhiteCidrList
	}
	return ""
}

func (x *ProxyConfig) GetNetworkFlowRemoteToLocalInBytes() int64 {
	if x != nil {
		return x.NetworkFlowRemoteToLocalInBytes
	}
	return 0
}

func (x *ProxyConfig) GetNetworkFlowLocalToRemoteInBytes() int64 {
	if x != nil {
		return x.NetworkFlowLocalToRemoteInBytes
	}
	return 0
}

func (x *ProxyConfig) GetProxyConnectCount() int64 {
	if x != nil {
		return x.ProxyConnectCount
	}
	return 0
}

func (x *ProxyConfig) GetProxyConnectRejectCount() int64 {
	if x != nil {
		return x.ProxyConnectRejectCount
	}
	return 0
}

// 新增代理配置输入
type AddProxyConfigInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *ProxyConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *AddProxyConfigInput) Reset() {
	*x = AddProxyConfigInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_server_anywhere_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProxyConfigInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProxyConfigInput) ProtoMessage() {}

func (x *AddProxyConfigInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_server_anywhere_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProxyConfigInput.ProtoReflect.Descriptor instead.
func (*AddProxyConfigInput) Descriptor() ([]byte, []int) {
	return file_proto_server_anywhere_server_proto_rawDescGZIP(), []int{4}
}

func (x *AddProxyConfigInput) GetConfig() *ProxyConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

// 代理配置列表输出
type ListProxyConfigsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configs []*ProxyConfig `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty"`
}

func (x *ListProxyConfigsOutput) Reset() {
	*x = ListProxyConfigsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_server_anywhere_server_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProxyConfigsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProxyConfigsOutput) ProtoMessage() {}

func (x *ListProxyConfigsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_server_anywhere_server_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProxyConfigsOutput.ProtoReflect.Descriptor instead.
func (*ListProxyConfigsOutput) Descriptor() ([]byte, []int) {
	return file_proto_server_anywhere_server_proto_rawDescGZIP(), []int{5}
}

func (x *ListProxyConfigsOutput) GetConfigs() []*ProxyConfig {
	if x != nil {
		return x.Configs
	}
	return nil
}

// 移除代理配置输入
type RemoveProxyConfigInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RemoveProxyConfigInput) Reset() {
	*x = RemoveProxyConfigInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_server_anywhere_server_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveProxyConfigInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveProxyConfigInput) ProtoMessage() {}

func (x *RemoveProxyConfigInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_server_anywhere_server_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveProxyConfigInput.ProtoReflect.Descriptor instead.
func (*RemoveProxyConfigInput) Descriptor() ([]byte, []int) {
	return file_proto_server_anywhere_server_proto_rawDescGZIP(), []int{6}
}

func (x *RemoveProxyConfigInput) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 列出连接输入
type ListConnsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	ZoneName string `protobuf:"bytes,2,opt,name=zone_name,json=zoneName,proto3" json:"zone_name,omitempty"`
}

func (x *ListConnsInput) Reset() {
	*x = ListConnsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_server_anywhere_server_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConnsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConnsInput) ProtoMessage() {}

func (x *ListConnsInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_server_anywhere_server_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConnsInput.ProtoReflect.Descriptor instead.
func (*ListConnsInput) Descriptor() ([]byte, []int) {
	return file_proto_server_anywhere_server_proto_rawDescGZIP(), []int{7}
}

func (x *ListConnsInput) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ListConnsInput) GetZoneName() string {
	if x != nil {
		return x.ZoneName
	}
	return ""
}

// 连接信息
type Conn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName      string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	ZoneName      string `protobuf:"bytes,2,opt,name=zone_name,json=zoneName,proto3" json:"zone_name,omitempty"`
	AgentId       string `protobuf:"bytes,3,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	ConnId        int64  `protobuf:"varint,4,opt,name=conn_id,json=connId,proto3" json:"conn_id,omitempty"`
	SrcRemoteAddr string `protobuf:"bytes,5,opt,name=src_remote_addr,json=srcRemoteAddr,proto3" json:"src_remote_addr,omitempty"`
	SrcLocalAddr  string `protobuf:"bytes,6,opt,name=src_local_addr,json=srcLocalAddr,proto3" json:"src_local_addr,omitempty"`
	DstRemoteAddr string `protobuf:"bytes,7,opt,name=dst_remote_addr,json=dstRemoteAddr,proto3" json:"dst_remote_addr,omitempty"`
	DstLocalAddr  string `protobuf:"bytes,8,opt,name=dst_local_addr,json=dstLocalAddr,proto3" json:"dst_local_addr,omitempty"`
}

func (x *Conn) Reset() {
	*x = Conn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_server_anywhere_server_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conn) ProtoMessage() {}

func (x *Conn) ProtoReflect() protoreflect.Message {
	mi := &file_proto_server_anywhere_server_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conn.ProtoReflect.Descriptor instead.
func (*Conn) Descriptor() ([]byte, []int) {
	return file_proto_server_anywhere_server_proto_rawDescGZIP(), []int{8}
}

func (x *Conn) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Conn) GetZoneName() string {
	if x != nil {
		return x.ZoneName
	}
	return ""
}

func (x *Conn) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *Conn) GetConnId() int64 {
	if x != nil {
		return x.ConnId
	}
	return 0
}

func (x *Conn) GetSrcRemoteAddr() string {
	if x != nil {
		return x.SrcRemoteAddr
	}
	return ""
}

func (x *Conn) GetSrcLocalAddr() string {
	if x != nil {
		return x.SrcLocalAddr
	}
	return ""
}

func (x *Conn) GetDstRemoteAddr() string {
	if x != nil {
		return x.DstRemoteAddr
	}
	return ""
}

func (x *Conn) GetDstLocalAddr() string {
	if x != nil {
		return x.DstLocalAddr
	}
	return ""
}

// 连接列表
type Conns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conns []*Conn `protobuf:"bytes,1,rep,name=conns,proto3" json:"conns,omitempty"`
}

func (x *Conns) Reset() {
	*x = Conns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_server_anywhere_server_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conns) ProtoMessage() {}

func (x *Conns) ProtoReflect() protoreflect.Message {
	mi := &file_proto_server_anywhere_server_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conns.ProtoReflect.Descriptor instead.
func (*Conns) Descriptor() ([]byte, []int) {
	return file_proto_server_anywhere_server_proto_rawDescGZIP(), []int{9}
}

func (x *Conns) GetConns() []*Conn {
	if x != nil {
		return x.Conns
	}
	return nil
}

// 按 ID 断开连接输入
type KillConnByIdInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *KillConnByIdInput) Reset() {
	*x = KillConnByIdInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_server_anywhere_server_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KillConnByIdInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillConnByIdInput) ProtoMessage() {}

func (x *KillConnByIdInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_server_anywhere_server_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillConnByIdInput.ProtoReflect.Descriptor instead.
func (*KillConnByIdInput) Descriptor() ([]byte, []int) {
	return file_proto_server_anywhere_server_proto_rawDescGZIP(), []int{10}
}

func (x *KillConnByIdInput) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 更新代理配置白名单输入
type UpdateProxyConfigWhiteListInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserName        string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	ZoneName        string `protobuf:"bytes,3,opt,name=zone_name,json=zoneName,proto3" json:"zone_name,omitempty"`
	LocalAddr       string `protobuf:"bytes,4,opt,name=local_addr,json=localAddr,proto3" json:"local_addr,omitempty"`
	WhiteCidrs      string `protobuf:"bytes,5,opt,name=white_cidrs,json=whiteCidrs,proto3" json:"white_cidrs,omitempty"`
	WhiteListEnable bool   `protobuf:"varint,6,opt,name=white_list_enable,json=whiteListEnable,proto3" json:"white_list_enable,omitempty"`
	RemotePort      int64  `protobuf:"varint,7,opt,name=remote_port,json=remotePort,proto3" json:"remote_port,omitempty"`
}

func (x *UpdateProxyConfigWhiteListInput) Reset() {
	*x = UpdateProxyConfigWhiteListInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_server_anywhere_server_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProxyConfigWhiteListInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProxyConfigWhiteListInput) ProtoMessage() {}

func (x *UpdateProxyConfigWhiteListInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_server_anywhere_server_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProxyConfigWhiteListInput.ProtoReflect.Descriptor instead.
func (*UpdateProxyConfigWhiteListInput) Descriptor() ([]byte, []int) {
	return file_proto_server_anywhere_server_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateProxyConfigWhiteListInput) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateProxyConfigWhiteListInput) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UpdateProxyConfigWhiteListInput) GetZoneName() string {
	if x != nil {
		return x.ZoneName
	}
	return ""
}

func (x *UpdateProxyConfigWhiteListInput) GetLocalAddr() string {
	if x != nil {
		return x.LocalAddr
	}
	return ""
}

func (x *UpdateProxyConfigWhiteListInput) GetWhiteCidrs() string {
	if x != nil {
		return x.WhiteCidrs
	}
	return ""
}

func (x *UpdateProxyConfigWhiteListInput) GetWhiteListEnable() bool {
	if x != nil {
		return x.WhiteListEnable
	}
	return false
}

func (x *UpdateProxyConfigWhiteListInput) GetRemotePort() int64 {
	if x != nil {
		return x.RemotePort
	}
	return 0
}

// 系统摘要信息输出
type GetSummaryOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentCount                  int64          `protobuf:"varint,1,opt,name=agent_count,json=agentCount,proto3" json:"agent_count,omitempty"`
	ProxyCount                  int64          `protobuf:"varint,2,opt,name=proxy_count,json=proxyCount,proto3" json:"proxy_count,omitempty"`
	CurrentProxyConnectionCount int64          `protobuf:"varint,3,opt,name=current_proxy_connection_count,json=currentProxyConnectionCount,proto3" json:"current_proxy_connection_count,omitempty"`
	ProxyConnectCount           int64          `protobuf:"varint,4,opt,name=proxy_connect_count,json=proxyConnectCount,proto3" json:"proxy_connect_count,omitempty"`
	ProxyNetFlowInBytes         int64          `protobuf:"varint,5,opt,name=proxy_net_flow_in_bytes,json=proxyNetFlowInBytes,proto3" json:"proxy_net_flow_in_bytes,omitempty"`
	ConfigNetFlowTop10          []*ProxyConfig `protobuf:"bytes,6,rep,name=config_net_flow_top10,json=configNetFlowTop10,proto3" json:"config_net_flow_top10,omitempty"`
	ConfigConnectFailTop10      []*ProxyConfig `protobuf:"bytes,7,rep,name=config_connect_fail_top10,json=configConnectFailTop10,proto3" json:"config_connect_fail_top10,omitempty"`
	AdminWebUiAuthFailCount     int64          `protobuf:"varint,8,opt,name=admin_web_ui_auth_fail_count,json=adminWebUiAuthFailCount,proto3" json:"admin_web_ui_auth_fail_count,omitempty"`
	GroupCount                  int64          `protobuf:"varint,9,opt,name=group_count,json=groupCount,proto3" json:"group_count,omitempty"`
}

func (x *GetSummaryOutput) Reset() {
	*x = GetSummaryOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_server_anywhere_server_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSummaryOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSummaryOutput) ProtoMessage() {}

func (x *GetSummaryOutput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_server_anywhere_server_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSummaryOutput.ProtoReflect.Descriptor instead.
func (*GetSummaryOutput) Descriptor() ([]byte, []int) {
	return file_proto_server_anywhere_server_proto_rawDescGZIP(), []int{12}
}

func (x *GetSummaryOutput) GetAgentCount() int64 {
	if x != nil {
		return x.AgentCount
	}
	return 0
}

func (x *GetSummaryOutput) GetProxyCount() int64 {
	if x != nil {
		return x.ProxyCount
	}
	return 0
}

func (x *GetSummaryOutput) GetCurrentProxyConnectionCount() int64 {
	if x != nil {
		return x.CurrentProxyConnectionCount
	}
	return 0
}

func (x *GetSummaryOutput) GetProxyConnectCount() int64 {
	if x != nil {
		return x.ProxyConnectCount
	}
	return 0
}

func (x *GetSummaryOutput) GetProxyNetFlowInBytes() int64 {
	if x != nil {
		return x.ProxyNetFlowInBytes
	}
	return 0
}

func (x *GetSummaryOutput) GetConfigNetFlowTop10() []*ProxyConfig {
	if x != nil {
		return x.ConfigNetFlowTop10
	}
	return nil
}

func (x *GetSummaryOutput) GetConfigConnectFailTop10() []*ProxyConfig {
	if x != nil {
		return x.ConfigConnectFailTop10
	}
	return nil
}

func (x *GetSummaryOutput) GetAdminWebUiAuthFailCount() int64 {
	if x != nil {
		return x.AdminWebUiAuthFailCount
	}
	return 0
}

func (x *GetSummaryOutput) GetGroupCount() int64 {
	if x != nil {
		return x.GroupCount
	}
	return 0
}

var File_proto_server_anywhere_server_proto protoreflect.FileDescriptor

var file_proto_server_anywhere_server_proto_rawDesc = []byte{
	0x0a, 0x22, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61,
	0x6e, 0x79, 0x77, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x6e, 0x79, 0x77, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x72,
	0x70, 0x63, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0xe6, 0x01, 0x0a, 0x05,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x7a, 0x6f, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72,
	0x12, 0x20, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x6b, 0x5f, 0x72, 0x63, 0x76,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x6b, 0x52,
	0x63, 0x76, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x6b, 0x5f, 0x73,
	0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x41,
	0x63, 0x6b, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x35, 0x0a, 0x06, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2b,
	0x0a, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x61, 0x6e, 0x79, 0x77, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xe5, 0x03, 0x0a, 0x0b,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x7a, 0x6f, 0x6e, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x7a, 0x6f, 0x6e,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x41, 0x64, 0x64, 0x72, 0x12, 0x27, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x77, 0x68, 0x69, 0x74,
	0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x69, 0x73, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x6e, 0x12, 0x26,
	0x0a, 0x0f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x5f, 0x63, 0x69, 0x64, 0x72, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x68, 0x69, 0x74, 0x65, 0x43, 0x69,
	0x64, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x25, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x74, 0x6f,
	0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x6c,
	0x6f, 0x77, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x54, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49,
	0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x25, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x74, 0x6f, 0x5f,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x6c,
	0x6f, 0x77, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49,
	0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x48, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x6e, 0x79,
	0x77, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x4d, 0x0a,
	0x16, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x33, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x6e, 0x79, 0x77, 0x68,
	0x65, 0x72, 0x65, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x22, 0x28, 0x0a, 0x16,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4a, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x6e, 0x6e, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x7a, 0x6f, 0x6e, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x90, 0x02, 0x0a, 0x04, 0x43, 0x6f, 0x6e, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x7a, 0x6f, 0x6e, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x7a, 0x6f, 0x6e,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x72, 0x63,
	0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x73, 0x72, 0x63, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x72, 0x63, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x72, 0x63, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x73, 0x74, 0x5f, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x64, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x12,
	0x24, 0x0a, 0x0e, 0x64, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x41, 0x64, 0x64, 0x72, 0x22, 0x31, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x6e, 0x73, 0x12, 0x28,
	0x0a, 0x05, 0x63, 0x6f, 0x6e, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x61, 0x6e, 0x79, 0x77, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6e,
	0x6e, 0x52, 0x05, 0x63, 0x6f, 0x6e, 0x6e, 0x73, 0x22, 0x23, 0x0a, 0x11, 0x4b, 0x69, 0x6c, 0x6c,
	0x43, 0x6f, 0x6e, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xf8, 0x01,
	0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x7a, 0x6f, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x68,
	0x69, 0x74, 0x65, 0x5f, 0x63, 0x69, 0x64, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x77, 0x68, 0x69, 0x74, 0x65, 0x43, 0x69, 0x64, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x77,
	0x68, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x83, 0x04, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x43, 0x0a, 0x1e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x17, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x6e, 0x65,
	0x74, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x4e, 0x65, 0x74, 0x46,
	0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x15, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6e, 0x65, 0x74, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x74, 0x6f,
	0x70, 0x31, 0x30, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x6e, 0x79, 0x77,
	0x68, 0x65, 0x72, 0x65, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x65, 0x74, 0x46,
	0x6c, 0x6f, 0x77, 0x54, 0x6f, 0x70, 0x31, 0x30, 0x12, 0x54, 0x0a, 0x19, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x5f,
	0x74, 0x6f, 0x70, 0x31, 0x30, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x6e,
	0x79, 0x77, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x16, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x54, 0x6f, 0x70, 0x31, 0x30, 0x12, 0x3d,
	0x0a, 0x1c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x77, 0x65, 0x62, 0x5f, 0x75, 0x69, 0x5f, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x57, 0x65, 0x62, 0x55, 0x69,
	0x41, 0x75, 0x74, 0x68, 0x46, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0xbc,
	0x06, 0x0a, 0x0e, 0x41, 0x6e, 0x79, 0x77, 0x68, 0x65, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0x38, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x13,
	0x2e, 0x61, 0x6e, 0x79, 0x77, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x14, 0x2e, 0x61, 0x6e, 0x79, 0x77, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x72,
	0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0e, 0x41,
	0x64, 0x64, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x21, 0x2e,
	0x61, 0x6e, 0x79, 0x77, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x13, 0x2e, 0x61, 0x6e, 0x79, 0x77, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x72, 0x70, 0x63, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x13, 0x2e, 0x61, 0x6e,
	0x79, 0x77, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x24, 0x2e, 0x61, 0x6e, 0x79, 0x77, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x72, 0x70, 0x63, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x24, 0x2e,
	0x61, 0x6e, 0x79, 0x77, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x13, 0x2e, 0x61, 0x6e, 0x79, 0x77, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x72,
	0x70, 0x63, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x13, 0x4c, 0x6f,
	0x61, 0x64, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c,
	0x65, 0x12, 0x13, 0x2e, 0x61, 0x6e, 0x79, 0x77, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x72, 0x70, 0x63,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x13, 0x2e, 0x61, 0x6e, 0x79, 0x77, 0x68, 0x65, 0x72,
	0x65, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a,
	0x15, 0x53, 0x61, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x54, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x13, 0x2e, 0x61, 0x6e, 0x79, 0x77, 0x68, 0x65, 0x72,
	0x65, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x13, 0x2e, 0x61, 0x6e,
	0x79, 0x77, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x46, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x2e, 0x61, 0x6e, 0x79, 0x77, 0x68, 0x65, 0x72, 0x65,
	0x5f, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x73, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x13, 0x2e, 0x61, 0x6e, 0x79, 0x77, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x73, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0c, 0x4b, 0x69,
	0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x2e, 0x61, 0x6e, 0x79,
	0x77, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x4b, 0x69, 0x6c, 0x6c, 0x43, 0x6f,
	0x6e, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x13, 0x2e, 0x61, 0x6e,
	0x79, 0x77, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x40, 0x0a, 0x12, 0x4b, 0x69, 0x6c, 0x6c, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x13, 0x2e, 0x61, 0x6e, 0x79, 0x77, 0x68,
	0x65, 0x72, 0x65, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x13, 0x2e,
	0x61, 0x6e, 0x79, 0x77, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x2d, 0x2e, 0x61, 0x6e, 0x79, 0x77, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x72, 0x70,
	0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x13, 0x2e, 0x61, 0x6e, 0x79, 0x77, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x72, 0x70, 0x63,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x13, 0x2e, 0x61, 0x6e, 0x79, 0x77, 0x68, 0x65, 0x72,
	0x65, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1e, 0x2e, 0x61, 0x6e,
	0x79, 0x77, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x42, 0x3c, 0x5a,
	0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6e, 0x74, 0x65,
	0x63, 0x68, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2f, 0x61, 0x6e, 0x79, 0x77, 0x68, 0x65, 0x72, 0x65,
	0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x70,
	0x62, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_server_anywhere_server_proto_rawDescOnce sync.Once
	file_proto_server_anywhere_server_proto_rawDescData = file_proto_server_anywhere_server_proto_rawDesc
)

func file_proto_server_anywhere_server_proto_rawDescGZIP() []byte {
	file_proto_server_anywhere_server_proto_rawDescOnce.Do(func() {
		file_proto_server_anywhere_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_server_anywhere_server_proto_rawDescData)
	})
	return file_proto_server_anywhere_server_proto_rawDescData
}

var file_proto_server_anywhere_server_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_proto_server_anywhere_server_proto_goTypes = []interface{}{
	(*Empty)(nil),                           // 0: anywhere_rpc.Empty
	(*Agent)(nil),                           // 1: anywhere_rpc.Agent
	(*Agents)(nil),                          // 2: anywhere_rpc.Agents
	(*ProxyConfig)(nil),                     // 3: anywhere_rpc.ProxyConfig
	(*AddProxyConfigInput)(nil),             // 4: anywhere_rpc.AddProxyConfigInput
	(*ListProxyConfigsOutput)(nil),          // 5: anywhere_rpc.ListProxyConfigsOutput
	(*RemoveProxyConfigInput)(nil),          // 6: anywhere_rpc.RemoveProxyConfigInput
	(*ListConnsInput)(nil),                  // 7: anywhere_rpc.ListConnsInput
	(*Conn)(nil),                            // 8: anywhere_rpc.Conn
	(*Conns)(nil),                           // 9: anywhere_rpc.Conns
	(*KillConnByIdInput)(nil),               // 10: anywhere_rpc.KillConnByIdInput
	(*UpdateProxyConfigWhiteListInput)(nil), // 11: anywhere_rpc.UpdateProxyConfigWhiteListInput
	(*GetSummaryOutput)(nil),                // 12: anywhere_rpc.GetSummaryOutput
}
var file_proto_server_anywhere_server_proto_depIdxs = []int32{
	1,  // 0: anywhere_rpc.Agents.agents:type_name -> anywhere_rpc.Agent
	3,  // 1: anywhere_rpc.AddProxyConfigInput.config:type_name -> anywhere_rpc.ProxyConfig
	3,  // 2: anywhere_rpc.ListProxyConfigsOutput.configs:type_name -> anywhere_rpc.ProxyConfig
	8,  // 3: anywhere_rpc.Conns.conns:type_name -> anywhere_rpc.Conn
	3,  // 4: anywhere_rpc.GetSummaryOutput.config_net_flow_top10:type_name -> anywhere_rpc.ProxyConfig
	3,  // 5: anywhere_rpc.GetSummaryOutput.config_connect_fail_top10:type_name -> anywhere_rpc.ProxyConfig
	0,  // 6: anywhere_rpc.AnywhereServer.ListAgent:input_type -> anywhere_rpc.Empty
	4,  // 7: anywhere_rpc.AnywhereServer.AddProxyConfig:input_type -> anywhere_rpc.AddProxyConfigInput
	0,  // 8: anywhere_rpc.AnywhereServer.ListProxyConfigs:input_type -> anywhere_rpc.Empty
	6,  // 9: anywhere_rpc.AnywhereServer.RemoveProxyConfig:input_type -> anywhere_rpc.RemoveProxyConfigInput
	0,  // 10: anywhere_rpc.AnywhereServer.LoadProxyConfigFile:input_type -> anywhere_rpc.Empty
	0,  // 11: anywhere_rpc.AnywhereServer.SaveProxyConfigToFile:input_type -> anywhere_rpc.Empty
	7,  // 12: anywhere_rpc.AnywhereServer.ListConnections:input_type -> anywhere_rpc.ListConnsInput
	10, // 13: anywhere_rpc.AnywhereServer.KillConnById:input_type -> anywhere_rpc.KillConnByIdInput
	0,  // 14: anywhere_rpc.AnywhereServer.KillAllConnections:input_type -> anywhere_rpc.Empty
	11, // 15: anywhere_rpc.AnywhereServer.UpdateProxyConfigWhiteList:input_type -> anywhere_rpc.UpdateProxyConfigWhiteListInput
	0,  // 16: anywhere_rpc.AnywhereServer.GetSummary:input_type -> anywhere_rpc.Empty
	2,  // 17: anywhere_rpc.AnywhereServer.ListAgent:output_type -> anywhere_rpc.Agents
	0,  // 18: anywhere_rpc.AnywhereServer.AddProxyConfig:output_type -> anywhere_rpc.Empty
	5,  // 19: anywhere_rpc.AnywhereServer.ListProxyConfigs:output_type -> anywhere_rpc.ListProxyConfigsOutput
	0,  // 20: anywhere_rpc.AnywhereServer.RemoveProxyConfig:output_type -> anywhere_rpc.Empty
	0,  // 21: anywhere_rpc.AnywhereServer.LoadProxyConfigFile:output_type -> anywhere_rpc.Empty
	0,  // 22: anywhere_rpc.AnywhereServer.SaveProxyConfigToFile:output_type -> anywhere_rpc.Empty
	9,  // 23: anywhere_rpc.AnywhereServer.ListConnections:output_type -> anywhere_rpc.Conns
	0,  // 24: anywhere_rpc.AnywhereServer.KillConnById:output_type -> anywhere_rpc.Empty
	0,  // 25: anywhere_rpc.AnywhereServer.KillAllConnections:output_type -> anywhere_rpc.Empty
	0,  // 26: anywhere_rpc.AnywhereServer.UpdateProxyConfigWhiteList:output_type -> anywhere_rpc.Empty
	12, // 27: anywhere_rpc.AnywhereServer.GetSummary:output_type -> anywhere_rpc.GetSummaryOutput
	17, // [17:28] is the sub-list for method output_type
	6,  // [6:17] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_proto_server_anywhere_server_proto_init() }
func file_proto_server_anywhere_server_proto_init() {
	if File_proto_server_anywhere_server_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_server_anywhere_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_server_anywhere_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Agent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_server_anywhere_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Agents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_server_anywhere_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_server_anywhere_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProxyConfigInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_server_anywhere_server_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProxyConfigsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_server_anywhere_server_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveProxyConfigInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_server_anywhere_server_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConnsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_server_anywhere_server_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_server_anywhere_server_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_server_anywhere_server_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KillConnByIdInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_server_anywhere_server_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProxyConfigWhiteListInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_server_anywhere_server_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSummaryOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_server_anywhere_server_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_server_anywhere_server_proto_goTypes,
		DependencyIndexes: file_proto_server_anywhere_server_proto_depIdxs,
		MessageInfos:      file_proto_server_anywhere_server_proto_msgTypes,
	}.Build()
	File_proto_server_anywhere_server_proto = out.File
	file_proto_server_anywhere_server_proto_rawDesc = nil
	file_proto_server_anywhere_server_proto_goTypes = nil
	file_proto_server_anywhere_server_proto_depIdxs = nil
}
